

Microchip Technology PIC LITE Macro Assembler V1.32 build 58300 
                                                                                               Tue Apr 11 09:06:47 2017

Microchip Technology Omniscient Code Generator (Lite mode) build 58300
     1                           	processor	12F1822
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	text0,local,class=CODE,merge=1,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	intentry,global,class=CODE,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	dabs	1,0x7E,2
    17  0000                     	;# 
    18  0001                     	;# 
    19  0002                     	;# 
    20  0003                     	;# 
    21  0004                     	;# 
    22  0005                     	;# 
    23  0006                     	;# 
    24  0007                     	;# 
    25  0008                     	;# 
    26  0009                     	;# 
    27  000A                     	;# 
    28  000B                     	;# 
    29  000C                     	;# 
    30  0011                     	;# 
    31  0012                     	;# 
    32  0015                     	;# 
    33  0016                     	;# 
    34  0016                     	;# 
    35  0017                     	;# 
    36  0018                     	;# 
    37  0019                     	;# 
    38  001A                     	;# 
    39  001B                     	;# 
    40  001C                     	;# 
    41  001E                     	;# 
    42  001F                     	;# 
    43  008C                     	;# 
    44  0091                     	;# 
    45  0092                     	;# 
    46  0095                     	;# 
    47  0096                     	;# 
    48  0097                     	;# 
    49  0098                     	;# 
    50  0099                     	;# 
    51  009A                     	;# 
    52  009B                     	;# 
    53  009B                     	;# 
    54  009C                     	;# 
    55  009D                     	;# 
    56  009E                     	;# 
    57  010C                     	;# 
    58  0111                     	;# 
    59  0112                     	;# 
    60  0115                     	;# 
    61  0116                     	;# 
    62  0117                     	;# 
    63  0118                     	;# 
    64  0119                     	;# 
    65  011A                     	;# 
    66  011B                     	;# 
    67  011D                     	;# 
    68  011D                     	;# 
    69  018C                     	;# 
    70  0191                     	;# 
    71  0191                     	;# 
    72  0192                     	;# 
    73  0193                     	;# 
    74  0193                     	;# 
    75  0193                     	;# 
    76  0194                     	;# 
    77  0195                     	;# 
    78  0196                     	;# 
    79  0199                     	;# 
    80  019A                     	;# 
    81  019B                     	;# 
    82  019B                     	;# 
    83  019B                     	;# 
    84  019B                     	;# 
    85  019C                     	;# 
    86  019C                     	;# 
    87  019D                     	;# 
    88  019E                     	;# 
    89  019F                     	;# 
    90  020C                     	;# 
    91  0211                     	;# 
    92  0211                     	;# 
    93  0212                     	;# 
    94  0212                     	;# 
    95  0213                     	;# 
    96  0213                     	;# 
    97  0214                     	;# 
    98  0214                     	;# 
    99  0215                     	;# 
   100  0215                     	;# 
   101  0215                     	;# 
   102  0216                     	;# 
   103  0216                     	;# 
   104  0217                     	;# 
   105  0217                     	;# 
   106  0291                     	;# 
   107  0291                     	;# 
   108  0292                     	;# 
   109  0293                     	;# 
   110  0294                     	;# 
   111  0295                     	;# 
   112  0295                     	;# 
   113  0296                     	;# 
   114  0391                     	;# 
   115  0392                     	;# 
   116  0393                     	;# 
   117  039A                     	;# 
   118  039C                     	;# 
   119  039D                     	;# 
   120  039E                     	;# 
   121  039F                     	;# 
   122  0FE4                     	;# 
   123  0FE5                     	;# 
   124  0FE6                     	;# 
   125  0FE7                     	;# 
   126  0FE8                     	;# 
   127  0FE9                     	;# 
   128  0FEA                     	;# 
   129  0FEB                     	;# 
   130  0FED                     	;# 
   131  0FEE                     	;# 
   132  0FEF                     	;# 
   133  000B                     _INTCON	set	11
   134  0011                     _PIR1bits	set	17
   135  001B                     _PR2	set	27
   136  001C                     _T2CON	set	28
   137  008B                     _SSP1IF	set	139
   138  0099                     _OSCCON	set	153
   139  0097                     _WDTCON	set	151
   140  048B                     _SSP1IE	set	1163
   141  0461                     _TRISA1	set	1121
   142  0462                     _TRISA2	set	1122
   143  0465                     _TRISA5	set	1125
   144  08E8                     _CCP1SEL	set	2280
   145  0865                     _LATA5	set	2149
   146  018C                     _ANSELA	set	396
   147  0195                     _EECON1	set	405
   148  0196                     _EECON2	set	406
   149  0212                     _SSP1ADD	set	530
   150  0211                     _SSP1BUF	set	529
   151  0215                     _SSP1CON1	set	533
   152  0216                     _SSP1CON2	set	534
   153  0217                     _SSP1CON3	set	535
   154  0214                     _SSP1STAT	set	532
   155  10B6                     _ACKSTAT	set	4278
   156  10AC                     _CKP	set	4268
   157  10B7                     _GCEN	set	4279
   158  10AD                     _SSPEN	set	4269
   159  0293                     _CCP1CON	set	659
   160  0291                     _CCPR1L	set	657
   161                           
   162                           	psect	text0
   163  0000                     __ptext0:	
   164                           ; #config settings
   165                           
   166                           
   167                           ;psect for function _ISRI2C
   168  0000                     
   169                           	psect	cinit
   170  0013                     start_initialization:	
   171  0013                     __initialization:	
   172                           
   173                           ; Clear objects allocated to COMMON
   174  0013  01F8               	clrf	__pbssCOMMON& (0+127)
   175  0014  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   176  0015  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
   177                           
   178                           ; Clear objects allocated to BANK0
   179  0016  3020               	movlw	low __pbssBANK0
   180  0017  0084               	movwf	4
   181  0018  3000               	movlw	high __pbssBANK0
   182  0019  0085               	movwf	5
   183  001A  3013               	movlw	19
   184  001B  215D               	fcall	clear_ram0
   185  001C                     end_of_initialization:	
   186                           ;End of C runtime variable initialization code
   187                           
   188  001C                     __end_of__initialization:	
   189  001C  107E               	bcf	pic14e$flags,0	;clear compiler interrupt flag
   190  001D  0020               	movlb	0
   191  001E  28A4               	ljmp	_main	;jump to C main() function
   192                           
   193                           	psect	bssCOMMON
   194  0078                     __pbssCOMMON:	
   195  0078                     _I2CInBufIndex:	
   196  0078                     	ds	1
   197  0079                     _I2COutBufIndex:	
   198  0079                     	ds	1
   199  007A                     _SSP1STATSave:	
   200  007A                     	ds	1
   201                           
   202                           	psect	bssBANK0
   203  0020                     __pbssBANK0:	
   204  0020                     _Temp:	
   205  0020                     	ds	6
   206  0026                     _I2CInBuffer:	
   207  0026                     	ds	5
   208  002B                     _I2COutBuffer:	
   209  002B                     	ds	5
   210  0030                     ISRI2C@generalCall:	
   211  0030                     	ds	1
   212  0031                     _Temp1:	
   213  0031                     	ds	1
   214  0032                     _Temp2:	
   215  0032                     	ds	1
   216                           
   217                           	psect	clrtext
   218  015D                     clear_ram0:	
   219                           ;	Called with FSR0 containing the base address, and
   220                           ;	WREG with the size to clear
   221                           
   222  015D  0064               	clrwdt	;clear the watchdog before getting into this loop
   223  015E                     clrloop0:	
   224  015E  0180               	clrf	0	;clear RAM location pointed to by FSR
   225  015F  3101               	addfsr 0,1
   226  0160  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
   227  0161  295E               	goto	clrloop0	;have we reached the end yet?
   228  0162  3400               	retlw	0	;all done for this memory range, return
   229                           
   230                           	psect	cstackCOMMON
   231  0070                     __pcstackCOMMON:	
   232  0070                     ?_I2CSlaveSetup:	
   233  0070                     ?_ISRI2C:	
   234                           ; 0 bytes @ 0x0
   235                           
   236  0070                     ??_ISRI2C:	
   237                           ; 0 bytes @ 0x0
   238                           
   239  0070                     ?_main:	
   240                           ; 0 bytes @ 0x0
   241                           
   242  0070                     ?_ISRDispatch:	
   243                           ; 0 bytes @ 0x0
   244                           
   245  0070                     ?_EEPROMReadByte:	
   246                           ; 0 bytes @ 0x0
   247                           
   248                           
   249                           ; 1 bytes @ 0x0
   250  0070                     	ds	1
   251  0071                     ??_ISRDispatch:	
   252                           
   253                           ; 0 bytes @ 0x1
   254  0071                     	ds	1
   255  0072                     ??_EEPROMReadByte:	
   256  0072                     ??_I2CSlaveSetup:	
   257                           ; 0 bytes @ 0x2
   258                           
   259                           
   260                           ; 0 bytes @ 0x2
   261  0072                     	ds	1
   262  0073                     I2CSlaveSetup@address:	
   263  0073                     EEPROMReadByte@addr:	
   264                           ; 1 bytes @ 0x3
   265                           
   266                           
   267                           ; 1 bytes @ 0x3
   268  0073                     	ds	1
   269  0074                     I2CSlaveSetup@i:	
   270                           
   271                           ; 1 bytes @ 0x4
   272  0074                     	ds	1
   273  0075                     ??_main:	
   274                           
   275                           ; 0 bytes @ 0x5
   276  0075                     	ds	3
   277                           
   278                           	psect	cstackBANK0
   279  0033                     __pcstackBANK0:	
   280  0033                     main@lockoutI2CAddressChange:	
   281                           
   282                           ; 1 bytes @ 0x0
   283  0033                     	ds	1
   284  0034                     main@newI2CAddress:	
   285                           
   286                           ; 1 bytes @ 0x1
   287  0034                     	ds	1
   288  0035                     main@k:	
   289                           
   290                           ; 1 bytes @ 0x2
   291  0035                     	ds	1
   292                           
   293                           	psect	maintext
   294  00A4                     __pmaintext:	
   295 ;;
   296 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   297 ;;
   298 ;; *************** function _main *****************
   299 ;; Defined at:
   300 ;;		line 83 in file "../main.c"
   301 ;; Parameters:    Size  Location     Type
   302 ;;		None
   303 ;; Auto vars:     Size  Location     Type
   304 ;;  k               1    2[BANK0 ] unsigned char 
   305 ;;  newI2CAddres    1    1[BANK0 ] unsigned char 
   306 ;;  lockoutI2CAd    1    0[BANK0 ] unsigned char 
   307 ;;  j               1    0        unsigned char 
   308 ;;  i               1    0        unsigned char 
   309 ;; Return value:  Size  Location     Type
   310 ;;		None               void
   311 ;; Registers used:
   312 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   313 ;; Tracked objects:
   314 ;;		On entry : 17F/0
   315 ;;		On exit  : 0/0
   316 ;;		Unchanged: 0/0
   317 ;; Data sizes:     COMMON   BANK0   BANK1
   318 ;;      Params:         0       0       0
   319 ;;      Locals:         0       3       0
   320 ;;      Temps:          3       0       0
   321 ;;      Totals:         3       3       0
   322 ;;Total ram usage:        6 bytes
   323 ;; Hardware stack levels required when called:    3
   324 ;; This function calls:
   325 ;;		_EEPROMReadByte
   326 ;;		_I2CSlaveSetup
   327 ;; This function is called by:
   328 ;;		Startup code after reset
   329 ;; This function uses a non-reentrant model
   330 ;;
   331                           
   332                           
   333                           ;psect for function _main
   334  00A4                     _main:	
   335                           
   336                           ;main.c: 85: UInt8 newI2CAddress;
   337                           ;main.c: 86: UInt8 lockoutI2CAddressChange;
   338                           ;main.c: 87: UInt8 i, j, k;
   339                           ;main.c: 90: OSCCON = 0b01111000;
   340                           
   341                           ;incstack = 0
   342                           ; Regs used in _main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
   343  00A4  3078               	movlw	120
   344  00A5  0021               	movlb	1	; select bank1
   345  00A6  0099               	movwf	25	;volatile
   346                           
   347                           ;main.c: 93: WDTCON = 0b00011001;
   348  00A7  3019               	movlw	25
   349  00A8  0097               	movwf	23	;volatile
   350                           
   351                           ;main.c: 95: ANSELA = 0x00;
   352  00A9  0023               	movlb	3	; select bank3
   353  00AA  018C               	clrf	12	;volatile
   354                           
   355                           ;main.c: 97: INTCON = 0b11000000;
   356  00AB  30C0               	movlw	192
   357  00AC  008B               	movwf	11	;volatile
   358                           
   359                           ;main.c: 100: LATA5 = 0;
   360  00AD  0022               	movlb	2	; select bank2
   361  00AE  128C               	bcf	12,5	;volatile
   362                           
   363                           ;main.c: 101: TRISA5 = 1;
   364  00AF  0021               	movlb	1	; select bank1
   365  00B0  168C               	bsf	12,5	;volatile
   366                           
   367                           ;main.c: 103: _delay((unsigned long)((200)*(8000000/4000.0)));
   368  00B1  3003               	movlw	3
   369  00B2  00F7               	movwf	??_main+2
   370  00B3  3008               	movlw	8
   371  00B4  00F6               	movwf	??_main+1
   372  00B5  3078               	movlw	120
   373  00B6  00F5               	movwf	??_main
   374  00B7                     u567:	
   375  00B7  0BF5               	decfsz	??_main,f
   376  00B8  28B7               	goto	u567
   377  00B9  0BF6               	decfsz	??_main+1,f
   378  00BA  28B7               	goto	u567
   379  00BB  0BF7               	decfsz	??_main+2,f
   380  00BC  28B7               	goto	u567
   381                           
   382                           ;main.c: 106: if ((newI2CAddress = EEPROMReadByte(0x10)) == 0x00
   383                           ;main.c: 107: || newI2CAddress == 0xFF)
   384  00BD  3010               	movlw	16
   385  00BE  214A               	fcall	_EEPROMReadByte
   386  00BF  00F5               	movwf	??_main
   387  00C0  0875               	movf	??_main,w
   388  00C1  0020               	movlb	0	; select bank0
   389  00C2  00B4               	movwf	main@newI2CAddress
   390  00C3  0834               	movf	main@newI2CAddress,w
   391  00C4  3A00               	xorlw	0
   392  00C5  1903               	skipnz
   393  00C6  28CB               	goto	l1004
   394  00C7  0834               	movf	main@newI2CAddress,w
   395  00C8  3AFF               	xorlw	255
   396  00C9  1D03               	skipz
   397  00CA  28CF               	goto	l1006
   398  00CB                     l1004:	
   399                           
   400                           ;main.c: 108: {
   401                           ;main.c: 109: newI2CAddress = 0x32;
   402  00CB  3032               	movlw	50
   403  00CC  00F5               	movwf	??_main
   404  00CD  0875               	movf	??_main,w
   405  00CE  00B4               	movwf	main@newI2CAddress
   406  00CF                     l1006:	
   407                           
   408                           ;main.c: 110: }
   409                           ;main.c: 113: I2CSlaveSetup(0x32);
   410  00CF  3032               	movlw	50
   411  00D0  2111               	fcall	_I2CSlaveSetup
   412                           
   413                           ;main.c: 115: newI2CAddress = 0x00;
   414  00D1  0020               	movlb	0	; select bank0
   415  00D2  01B4               	clrf	main@newI2CAddress
   416                           
   417                           ;main.c: 116: lockoutI2CAddressChange = 0;
   418  00D3  01B3               	clrf	main@lockoutI2CAddressChange
   419                           
   420                           ;main.c: 119: CCP1SEL = 1;
   421  00D4  0022               	movlb	2	; select bank2
   422  00D5  141D               	bsf	29,0	;volatile
   423                           
   424                           ;main.c: 121: PR2 = 0xFF;
   425  00D6  30FF               	movlw	255
   426  00D7  0020               	movlb	0	; select bank0
   427  00D8  009B               	movwf	27	;volatile
   428                           
   429                           ;main.c: 122: CCPR1L = 0x00;
   430  00D9  0025               	movlb	5	; select bank5
   431  00DA  0191               	clrf	17	;volatile
   432                           
   433                           ;main.c: 123: CCP1CON = 0b00001100;
   434  00DB  300C               	movlw	12
   435  00DC  0093               	movwf	19	;volatile
   436                           
   437                           ;main.c: 125: PIR1bits.TMR2IF = 0;
   438  00DD  0020               	movlb	0	; select bank0
   439  00DE  1091               	bcf	17,1	;volatile
   440                           
   441                           ;main.c: 126: T2CON = 0b01111100;
   442  00DF  307C               	movlw	124
   443  00E0  009C               	movwf	28	;volatile
   444  00E1                     l82:	
   445                           ;main.c: 129: while (!PIR1bits.TMR2IF) { }
   446                           
   447  00E1  1C91               	btfss	17,1	;volatile
   448  00E2  28E1               	goto	l82
   449                           
   450                           ;main.c: 131: TRISA5 = 0;
   451  00E3  0021               	movlb	1	; select bank1
   452  00E4  128C               	bcf	12,5	;volatile
   453                           
   454                           ;main.c: 134: I2COutBuffer[2] = 0x01;
   455  00E5  3001               	movlw	1
   456  00E6  00F5               	movwf	??_main
   457  00E7  0875               	movf	??_main,w
   458  00E8  0020               	movlb	0	; select bank0
   459  00E9  00AD               	movwf	_I2COutBuffer+2	;volatile
   460  00EA                     l85:	
   461                           ;main.c: 143: while(1)
   462                           
   463  00EA  0064               	clrwdt	;# 
   464                           
   465                           ;main.c: 147: _delay((unsigned long)((1)*(8000000/4000.0)));
   466  00EB  3003               	movlw	3
   467  00EC  00F6               	movwf	??_main+1
   468  00ED  3097               	movlw	151
   469  00EE  00F5               	movwf	??_main
   470  00EF                     u577:	
   471  00EF  0BF5               	decfsz	??_main,f
   472  00F0  28EF               	goto	u577
   473  00F1  0BF6               	decfsz	??_main+1,f
   474  00F2  28EF               	goto	u577
   475  00F3  3200               	nop2
   476                           
   477                           ;main.c: 150: SSP1IE = 0;
   478  00F4  0021               	movlb	1	; select bank1
   479  00F5  1191               	bcf	17,3	;volatile
   480                           
   481                           ;main.c: 178: {
   482                           ;main.c: 179: k = I2CInBuffer[0];
   483  00F6  0020               	movlb	0	; select bank0
   484  00F7  0826               	movf	_I2CInBuffer,w	;volatile
   485  00F8  00F5               	movwf	??_main
   486  00F9  0875               	movf	??_main,w
   487  00FA  00B5               	movwf	main@k
   488                           
   489                           ;main.c: 181: if (k < 1)
   490  00FB  08B5               	movf	main@k,f
   491  00FC  1D03               	skipz
   492  00FD  2901               	goto	l86
   493                           
   494                           ;main.c: 182: TRISA5 = 1;
   495  00FE  0021               	movlb	1	; select bank1
   496  00FF  168C               	bsf	12,5	;volatile
   497  0100  2907               	goto	l87
   498  0101                     l86:	
   499                           
   500                           ;main.c: 183: else
   501                           ;main.c: 184: {
   502                           ;main.c: 185: lockoutI2CAddressChange = 1;
   503  0101  01B3               	clrf	main@lockoutI2CAddressChange
   504  0102  0AB3               	incf	main@lockoutI2CAddressChange,f
   505                           
   506                           ;main.c: 186: GCEN = 0;
   507  0103  0024               	movlb	4	; select bank4
   508  0104  1396               	bcf	22,7	;volatile
   509                           
   510                           ;main.c: 187: TRISA5 = 0;
   511  0105  0021               	movlb	1	; select bank1
   512  0106  128C               	bcf	12,5	;volatile
   513  0107                     l87:	
   514                           
   515                           ;main.c: 188: }
   516                           ;main.c: 189: }
   517                           ;main.c: 191: SSP1IE = 1;
   518  0107  1591               	bsf	17,3	;volatile
   519                           
   520                           ;main.c: 193: CCPR1L = k;
   521  0108  0020               	movlb	0	; select bank0
   522  0109  0835               	movf	main@k,w
   523  010A  0025               	movlb	5	; select bank5
   524  010B  0091               	movwf	17	;volatile
   525                           
   526                           ;main.c: 194: CCP1CON &= 0b11001111;
   527  010C  30CF               	movlw	207
   528  010D  00F5               	movwf	??_main
   529  010E  0875               	movf	??_main,w
   530  010F  0593               	andwf	19,f	;volatile
   531  0110  28EA               	goto	l85
   532  0111                     __end_of_main:	
   533                           
   534                           	psect	text1
   535  0111                     __ptext1:	
   536 ;; *************** function _I2CSlaveSetup *****************
   537 ;; Defined at:
   538 ;;		line 340 in file "../main.c"
   539 ;; Parameters:    Size  Location     Type
   540 ;;  address         1    wreg     unsigned char 
   541 ;; Auto vars:     Size  Location     Type
   542 ;;  address         1    3[COMMON] unsigned char 
   543 ;;  i               1    4[COMMON] unsigned char 
   544 ;; Return value:  Size  Location     Type
   545 ;;		None               void
   546 ;; Registers used:
   547 ;;		wreg, fsr1l, fsr1h, status,2, status,0
   548 ;; Tracked objects:
   549 ;;		On entry : 0/0
   550 ;;		On exit  : 0/0
   551 ;;		Unchanged: 0/0
   552 ;; Data sizes:     COMMON   BANK0   BANK1
   553 ;;      Params:         0       0       0
   554 ;;      Locals:         2       0       0
   555 ;;      Temps:          1       0       0
   556 ;;      Totals:         3       0       0
   557 ;;Total ram usage:        3 bytes
   558 ;; Hardware stack levels used:    1
   559 ;; Hardware stack levels required when called:    2
   560 ;; This function calls:
   561 ;;		Nothing
   562 ;; This function is called by:
   563 ;;		_main
   564 ;; This function uses a non-reentrant model
   565 ;;
   566                           
   567                           
   568                           ;psect for function _I2CSlaveSetup
   569  0111                     _I2CSlaveSetup:	
   570                           
   571                           ;incstack = 0
   572                           ; Regs used in _I2CSlaveSetup: [wreg+fsr1l+fsr1h+status,2+status,0]
   573                           ;I2CSlaveSetup@address stored from wreg
   574  0111  00F3               	movwf	I2CSlaveSetup@address
   575                           
   576                           ;main.c: 342: UInt8 i;
   577                           ;main.c: 345: TRISA1 = 1;
   578  0112  0021               	movlb	1	; select bank1
   579  0113  148C               	bsf	12,1	;volatile
   580                           
   581                           ;main.c: 346: TRISA2 = 1;
   582  0114  150C               	bsf	12,2	;volatile
   583                           
   584                           ;main.c: 348: for (i = 0; i < sizeof(I2CInBuffer); i++)
   585  0115  01F4               	clrf	I2CSlaveSetup@i
   586  0116  3005               	movlw	5
   587  0117  0274               	subwf	I2CSlaveSetup@i,w
   588  0118  1803               	btfsc	3,0
   589  0119  2927               	goto	l968
   590  011A                     l962:	
   591                           
   592                           ;main.c: 349: I2CInBuffer[i] = 0;
   593  011A  0874               	movf	I2CSlaveSetup@i,w
   594  011B  3E26               	addlw	_I2CInBuffer& (0+255)
   595  011C  0086               	movwf	6
   596  011D  0187               	clrf	7
   597  011E  0181               	clrf	1
   598  011F  3001               	movlw	1
   599  0120  00F2               	movwf	??_I2CSlaveSetup
   600  0121  0872               	movf	??_I2CSlaveSetup,w
   601  0122  07F4               	addwf	I2CSlaveSetup@i,f
   602  0123  3005               	movlw	5
   603  0124  0274               	subwf	I2CSlaveSetup@i,w
   604  0125  1C03               	skipc
   605  0126  291A               	goto	l962
   606  0127                     l968:	
   607                           
   608                           ;main.c: 351: for (i = 0; i < sizeof(I2COutBuffer); i++)
   609  0127  01F4               	clrf	I2CSlaveSetup@i
   610  0128  3005               	movlw	5
   611  0129  0274               	subwf	I2CSlaveSetup@i,w
   612  012A  1803               	btfsc	3,0
   613  012B  2939               	goto	l980
   614  012C                     l974:	
   615                           
   616                           ;main.c: 352: I2COutBuffer[i] = 0;
   617  012C  0874               	movf	I2CSlaveSetup@i,w
   618  012D  3E2B               	addlw	_I2COutBuffer& (0+255)
   619  012E  0086               	movwf	6
   620  012F  0187               	clrf	7
   621  0130  0181               	clrf	1
   622  0131  3001               	movlw	1
   623  0132  00F2               	movwf	??_I2CSlaveSetup
   624  0133  0872               	movf	??_I2CSlaveSetup,w
   625  0134  07F4               	addwf	I2CSlaveSetup@i,f
   626  0135  3005               	movlw	5
   627  0136  0274               	subwf	I2CSlaveSetup@i,w
   628  0137  1C03               	skipc
   629  0138  292C               	goto	l974
   630  0139                     l980:	
   631                           
   632                           ;main.c: 354: SSP1ADD = address;
   633  0139  0873               	movf	I2CSlaveSetup@address,w
   634  013A  0024               	movlb	4	; select bank4
   635  013B  0092               	movwf	18	;volatile
   636                           
   637                           ;main.c: 356: SSP1CON1 = 0b00110110;
   638  013C  3036               	movlw	54
   639  013D  0095               	movwf	21	;volatile
   640                           
   641                           ;main.c: 357: SSP1CON2 = 0b10000001;
   642  013E  3081               	movlw	129
   643  013F  0096               	movwf	22	;volatile
   644                           
   645                           ;main.c: 358: SSP1CON3 = 0b00010000;
   646  0140  3010               	movlw	16
   647  0141  0097               	movwf	23	;volatile
   648                           
   649                           ;main.c: 360: SSP1STAT = 0b10000000;
   650  0142  3080               	movlw	128
   651  0143  0094               	movwf	20	;volatile
   652                           
   653                           ;main.c: 362: SSPEN = 1;
   654  0144  1695               	bsf	21,5	;volatile
   655                           
   656                           ;main.c: 364: SSP1IF = 0;
   657  0145  0020               	movlb	0	; select bank0
   658  0146  1191               	bcf	17,3	;volatile
   659                           
   660                           ;main.c: 365: SSP1IE = 1;
   661  0147  0021               	movlb	1	; select bank1
   662  0148  1591               	bsf	17,3	;volatile
   663  0149  0008               	return
   664  014A                     __end_of_I2CSlaveSetup:	
   665                           
   666                           	psect	text2
   667  014A                     __ptext2:	
   668 ;; *************** function _EEPROMReadByte *****************
   669 ;; Defined at:
   670 ;;		line 369 in file "../main.c"
   671 ;; Parameters:    Size  Location     Type
   672 ;;  addr            1    wreg     unsigned char 
   673 ;; Auto vars:     Size  Location     Type
   674 ;;  addr            1    3[COMMON] unsigned char 
   675 ;; Return value:  Size  Location     Type
   676 ;;                  1    wreg      unsigned char 
   677 ;; Registers used:
   678 ;;		wreg
   679 ;; Tracked objects:
   680 ;;		On entry : 0/0
   681 ;;		On exit  : 0/0
   682 ;;		Unchanged: 0/0
   683 ;; Data sizes:     COMMON   BANK0   BANK1
   684 ;;      Params:         0       0       0
   685 ;;      Locals:         1       0       0
   686 ;;      Temps:          1       0       0
   687 ;;      Totals:         2       0       0
   688 ;;Total ram usage:        2 bytes
   689 ;; Hardware stack levels used:    1
   690 ;; Hardware stack levels required when called:    2
   691 ;; This function calls:
   692 ;;		Nothing
   693 ;; This function is called by:
   694 ;;		_main
   695 ;; This function uses a non-reentrant model
   696 ;;
   697                           
   698                           
   699                           ;psect for function _EEPROMReadByte
   700  014A                     _EEPROMReadByte:	
   701                           
   702                           ;incstack = 0
   703                           ; Regs used in _EEPROMReadByte: [wreg]
   704                           ;EEPROMReadByte@addr stored from wreg
   705  014A  00F3               	movwf	EEPROMReadByte@addr
   706                           
   707                           ;main.c: 371: Temp1 = addr;
   708  014B  0873               	movf	EEPROMReadByte@addr,w
   709  014C  00F2               	movwf	??_EEPROMReadByte
   710  014D  0872               	movf	??_EEPROMReadByte,w
   711  014E  0020               	movlb	0	; select bank0
   712  014F  00B1               	movwf	_Temp1
   713  0150  0020               	banksel	_Temp1	; ;# 
   714  0151  0831               	movf	_Temp1,w	; ;# 
   715  0152  0023               	banksel	401	; ;# 
   716  0153  0091               	movwf	401	; Data Memory ;# 
   717                           
   718                           ; Address to read ;# 
   719  0154  1315               	bcf	405,6	; Deselect Config space ;# 
   720  0155  1395               	bcf	405,7	; Point to DATA memory ;# 
   721  0156  1415               	bsf	405,0	; EE Read ;# 
   722  0157  0813               	movf	403,w	; W = EEDATL ;# 
   723  0158  0020               	banksel	_Temp2	; ;# 
   724  0159  00B2               	movwf	_Temp2	; Temp2 = W ;# 
   725                           
   726                           ;main.c: 387: return Temp2;
   727  015A  0020               	movlb	0	; select bank0
   728  015B  0832               	movf	_Temp2,w
   729  015C  0008               	return
   730  015D                     __end_of_EEPROMReadByte:	
   731                           
   732                           	psect	intentry
   733  0004                     __pintentry:	
   734 ;; *************** function _ISRDispatch *****************
   735 ;; Defined at:
   736 ;;		line 201 in file "../main.c"
   737 ;; Parameters:    Size  Location     Type
   738 ;;		None
   739 ;; Auto vars:     Size  Location     Type
   740 ;;		None
   741 ;; Return value:  Size  Location     Type
   742 ;;		None               void
   743 ;; Registers used:
   744 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   745 ;; Tracked objects:
   746 ;;		On entry : 0/0
   747 ;;		On exit  : 0/0
   748 ;;		Unchanged: 0/0
   749 ;; Data sizes:     COMMON   BANK0   BANK1
   750 ;;      Params:         0       0       0
   751 ;;      Locals:         0       0       0
   752 ;;      Temps:          1       0       0
   753 ;;      Totals:         1       0       0
   754 ;;Total ram usage:        1 bytes
   755 ;; Hardware stack levels used:    1
   756 ;; Hardware stack levels required when called:    1
   757 ;; This function calls:
   758 ;;		_ISRI2C
   759 ;; This function is called by:
   760 ;;		Interrupt level 1
   761 ;; This function uses a non-reentrant model
   762 ;;
   763                           
   764  0004                     _ISRDispatch:	
   765                           
   766                           ;incstack = 0
   767                           ; Regs used in _ISRDispatch: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
   768  0004  147E               	bsf	126,0	;set compiler interrupt flag
   769  0005  3180               	pagesel	$
   770  0006  0020               	movlb	0	; select bank0
   771  0007  087F               	movf	127,w
   772  0008  00F1               	movwf	??_ISRDispatch
   773                           
   774                           ;main.c: 205: if (SSP1IF)
   775  0009  1D91               	btfss	17,3	;volatile
   776  000A  280D               	goto	i1l94
   777                           
   778                           ;main.c: 206: {
   779                           ;main.c: 207: SSP1IF = 0;
   780  000B  1191               	bcf	17,3	;volatile
   781                           
   782                           ;main.c: 208: ISRI2C();
   783  000C  201F               	fcall	_ISRI2C
   784  000D                     i1l94:	
   785  000D  0871               	movf	??_ISRDispatch,w
   786  000E  0020               	movlb	0	; select bank0
   787  000F  00FF               	movwf	127
   788  0010  107E               	bcf	126,0	;clear compiler interrupt flag
   789  0011  0009               	retfie
   790  0012                     __end_of_ISRDispatch:	
   791                           
   792                           	psect	text4
   793  001F                     __ptext4:	
   794 ;; *************** function _ISRI2C *****************
   795 ;; Defined at:
   796 ;;		line 221 in file "../main.c"
   797 ;; Parameters:    Size  Location     Type
   798 ;;		None
   799 ;; Auto vars:     Size  Location     Type
   800 ;;		None
   801 ;; Return value:  Size  Location     Type
   802 ;;		None               void
   803 ;; Registers used:
   804 ;;		wreg, fsr1l, fsr1h, status,2, status,0
   805 ;; Tracked objects:
   806 ;;		On entry : 0/0
   807 ;;		On exit  : 0/0
   808 ;;		Unchanged: 0/0
   809 ;; Data sizes:     COMMON   BANK0   BANK1
   810 ;;      Params:         0       0       0
   811 ;;      Locals:         0       0       0
   812 ;;      Temps:          1       0       0
   813 ;;      Totals:         1       0       0
   814 ;;Total ram usage:        1 bytes
   815 ;; Hardware stack levels used:    1
   816 ;; This function calls:
   817 ;;		Nothing
   818 ;; This function is called by:
   819 ;;		_ISRDispatch
   820 ;; This function uses a non-reentrant model
   821 ;;
   822                           
   823                           
   824                           ;psect for function _ISRI2C
   825  001F                     _ISRI2C:	
   826                           
   827                           ;main.c: 223: static UInt8 generalCall = 0;
   828                           ;main.c: 249: SSP1STATSave = (SSP1STAT & 0b00101101);
   829                           
   830                           ;incstack = 0
   831                           ; Regs used in _ISRI2C: [wreg+fsr1l+fsr1h+status,2+status,0]
   832  001F  0024               	movlb	4	; select bank4
   833  0020  0814               	movf	20,w	;volatile
   834  0021  392D               	andlw	45
   835  0022  00F0               	movwf	??_ISRI2C
   836  0023  0870               	movf	??_ISRI2C,w
   837  0024  00FA               	movwf	_SSP1STATSave	;volatile
   838                           
   839                           ;main.c: 251: if (SSP1STATSave == 0b00001001)
   840  0025  087A               	movf	_SSP1STATSave,w	;volatile
   841  0026  3A09               	xorlw	9
   842  0027  1D03               	skipz
   843  0028  2839               	goto	i1l828
   844                           
   845                           ;main.c: 252: {
   846                           ;main.c: 253: Temp1 = SSP1BUF;
   847  0029  0811               	movf	17,w	;volatile
   848  002A  00F0               	movwf	??_ISRI2C
   849  002B  0870               	movf	??_ISRI2C,w
   850  002C  0020               	movlb	0	; select bank0
   851  002D  00B1               	movwf	_Temp1
   852                           
   853                           ;main.c: 255: if (Temp1 == 0x00)
   854  002E  08B1               	movf	_Temp1,f
   855  002F  1D03               	skipz
   856  0030  2834               	goto	i1l822
   857                           
   858                           ;main.c: 256: generalCall = 1;
   859  0031  01B0               	clrf	ISRI2C@generalCall
   860  0032  0AB0               	incf	ISRI2C@generalCall,f
   861  0033  2835               	goto	i1l101
   862  0034                     i1l822:	
   863                           
   864                           ;main.c: 257: else
   865                           ;main.c: 258: generalCall = 0;
   866  0034  01B0               	clrf	ISRI2C@generalCall
   867  0035                     i1l101:	
   868                           
   869                           ;main.c: 260: I2CInBufIndex = 0;
   870  0035  01F8               	clrf	_I2CInBufIndex	;volatile
   871                           
   872                           ;main.c: 261: CKP = 1;
   873  0036  0024               	movlb	4	; select bank4
   874  0037  1615               	bsf	21,4	;volatile
   875                           
   876                           ;main.c: 262: return;
   877  0038  0008               	return
   878  0039                     i1l828:	
   879                           
   880                           ;main.c: 263: }
   881                           ;main.c: 265: if (SSP1STATSave == 0b00101001)
   882  0039  087A               	movf	_SSP1STATSave,w	;volatile
   883  003A  3A29               	xorlw	41
   884  003B  1D03               	skipz
   885  003C  2850               	goto	i1l840
   886  003D                     i1l830:	
   887                           ;main.c: 266: {
   888                           ;main.c: 267: GeneralCallWrite:
   889                           
   890                           
   891                           ;main.c: 268: I2CInBuffer[I2CInBufIndex] = SSP1BUF;
   892  003D  0024               	movlb	4	; select bank4
   893  003E  0811               	movf	17,w	;volatile
   894  003F  00F0               	movwf	??_ISRI2C
   895  0040  0878               	movf	_I2CInBufIndex,w
   896  0041  3E26               	addlw	_I2CInBuffer& (0+255)
   897  0042  0086               	movwf	6
   898  0043  0187               	clrf	7
   899  0044  0870               	movf	??_ISRI2C,w
   900  0045  0081               	movwf	1
   901                           
   902                           ;main.c: 270: if (++I2CInBufIndex == sizeof(I2CInBuffer))
   903  0046  3001               	movlw	1
   904  0047  00F0               	movwf	??_ISRI2C
   905  0048  0870               	movf	??_ISRI2C,w
   906  0049  07F8               	addwf	_I2CInBufIndex,f	;volatile
   907  004A  0878               	movf	_I2CInBufIndex,w	;volatile
   908  004B  3A05               	xorlw	5
   909  004C  1903               	btfsc	3,2
   910                           
   911                           ;main.c: 271: I2CInBufIndex = 0;
   912  004D  01F8               	clrf	_I2CInBufIndex	;volatile
   913                           
   914                           ;main.c: 273: CKP = 1;
   915  004E  1615               	bsf	21,4	;volatile
   916                           
   917                           ;main.c: 274: return;
   918  004F  0008               	return
   919  0050                     i1l840:	
   920                           
   921                           ;main.c: 275: }
   922                           ;main.c: 277: SSP1STATSave &= 0b00101100;
   923  0050  302C               	movlw	44
   924  0051  00F0               	movwf	??_ISRI2C
   925  0052  0870               	movf	??_ISRI2C,w
   926  0053  05FA               	andwf	_SSP1STATSave,f	;volatile
   927                           
   928                           ;main.c: 279: if (SSP1STATSave == 0b00001100)
   929  0054  087A               	movf	_SSP1STATSave,w	;volatile
   930  0055  3A0C               	xorlw	12
   931  0056  1D03               	skipz
   932  0057  286F               	goto	i1l862
   933                           
   934                           ;main.c: 280: {
   935                           ;main.c: 281: Temp1 = SSP1BUF;
   936  0058  0811               	movf	17,w	;volatile
   937  0059  00F0               	movwf	??_ISRI2C
   938  005A  0870               	movf	??_ISRI2C,w
   939  005B  0020               	movlb	0	; select bank0
   940  005C  00B1               	movwf	_Temp1
   941                           
   942                           ;main.c: 283: if (Temp1 == 0x00)
   943  005D  08B1               	movf	_Temp1,f
   944  005E  1D03               	skipz
   945  005F  2864               	goto	i1l852
   946                           
   947                           ;main.c: 284: {
   948                           ;main.c: 285: generalCall = 1;
   949  0060  01B0               	clrf	ISRI2C@generalCall
   950  0061  0AB0               	incf	ISRI2C@generalCall,f
   951                           
   952                           ;main.c: 286: I2CInBufIndex = 0;
   953  0062  01F8               	clrf	_I2CInBufIndex	;volatile
   954                           
   955                           ;main.c: 287: }
   956  0063  286C               	goto	i1l858
   957  0064                     i1l852:	
   958                           
   959                           ;main.c: 288: else
   960                           ;main.c: 289: {
   961                           ;main.c: 290: generalCall = 0;
   962  0064  01B0               	clrf	ISRI2C@generalCall
   963                           
   964                           ;main.c: 291: SSP1BUF = I2COutBuffer[0];
   965  0065  082B               	movf	_I2COutBuffer,w	;volatile
   966  0066  0024               	movlb	4	; select bank4
   967  0067  0091               	movwf	17	;volatile
   968                           
   969                           ;main.c: 292: I2COutBufIndex = 1;
   970  0068  3001               	movlw	1
   971  0069  00F0               	movwf	??_ISRI2C
   972  006A  0870               	movf	??_ISRI2C,w
   973  006B  00F9               	movwf	_I2COutBufIndex	;volatile
   974  006C                     i1l858:	
   975                           
   976                           ;main.c: 293: }
   977                           ;main.c: 295: CKP = 1;
   978  006C  0024               	movlb	4	; select bank4
   979  006D  1615               	bsf	21,4	;volatile
   980                           
   981                           ;main.c: 296: return;
   982  006E  0008               	return
   983  006F                     i1l862:	
   984                           
   985                           ;main.c: 297: }
   986                           ;main.c: 299: if (SSP1STATSave == 0b00101100 && !CKP)
   987  006F  087A               	movf	_SSP1STATSave,w	;volatile
   988  0070  3A2C               	xorlw	44
   989  0071  1903               	btfsc	3,2
   990  0072  1A15               	btfsc	21,4	;volatile
   991  0073  288C               	goto	i1l880
   992                           
   993                           ;main.c: 300: {
   994                           ;main.c: 301: if (generalCall == 1)
   995  0074  0020               	movlb	0	; select bank0
   996  0075  0830               	movf	ISRI2C@generalCall,w
   997  0076  3A01               	xorlw	1
   998  0077  1903               	btfsc	3,2
   999  0078  283D               	goto	i1l830
  1000                           
  1001                           ;main.c: 304: if (!ACKSTAT)
  1002                           
  1003                           ;main.c: 302: goto GeneralCallWrite;
  1004  0079  0024               	movlb	4	; select bank4
  1005  007A  1B16               	btfsc	22,6	;volatile
  1006  007B  288A               	goto	i1l876
  1007                           
  1008                           ;main.c: 305: {
  1009                           ;main.c: 306: SSP1BUF = I2COutBuffer[I2COutBufIndex];
  1010  007C  0879               	movf	_I2COutBufIndex,w
  1011  007D  3E2B               	addlw	_I2COutBuffer& (0+255)
  1012  007E  0086               	movwf	6
  1013  007F  0187               	clrf	7
  1014  0080  0801               	movf	1,w
  1015  0081  0091               	movwf	17	;volatile
  1016                           
  1017                           ;main.c: 308: if (++I2COutBufIndex == sizeof(I2COutBuffer))
  1018  0082  3001               	movlw	1
  1019  0083  00F0               	movwf	??_ISRI2C
  1020  0084  0870               	movf	??_ISRI2C,w
  1021  0085  07F9               	addwf	_I2COutBufIndex,f	;volatile
  1022  0086  0879               	movf	_I2COutBufIndex,w	;volatile
  1023  0087  3A05               	xorlw	5
  1024  0088  1903               	btfsc	3,2
  1025                           
  1026                           ;main.c: 309: I2COutBufIndex = 0;
  1027  0089  01F9               	clrf	_I2COutBufIndex	;volatile
  1028  008A                     i1l876:	
  1029                           
  1030                           ;main.c: 310: }
  1031                           ;main.c: 312: CKP = 1;
  1032  008A  1615               	bsf	21,4	;volatile
  1033                           
  1034                           ;main.c: 313: return;
  1035  008B  0008               	return
  1036  008C                     i1l880:	
  1037                           
  1038                           ;main.c: 314: }
  1039                           ;main.c: 316: SSP1STATSave &= 0b00101000;
  1040  008C  3028               	movlw	40
  1041  008D  00F0               	movwf	??_ISRI2C
  1042  008E  0870               	movf	??_ISRI2C,w
  1043  008F  05FA               	andwf	_SSP1STATSave,f	;volatile
  1044                           
  1045                           ;main.c: 318: if (SSP1STATSave == 0b00101000)
  1046  0090  087A               	movf	_SSP1STATSave,w	;volatile
  1047  0091  3A28               	xorlw	40
  1048  0092  1D03               	skipz
  1049  0093  289C               	goto	i1l890
  1050                           
  1051                           ;main.c: 319: {
  1052                           ;main.c: 320: if (generalCall == 1)
  1053  0094  0020               	movlb	0	; select bank0
  1054  0095  0830               	movf	ISRI2C@generalCall,w
  1055  0096  3A01               	xorlw	1
  1056  0097  1903               	btfsc	3,2
  1057  0098  283D               	goto	i1l830
  1058                           
  1059                           ;main.c: 323: CKP = 1;
  1060                           
  1061                           ;main.c: 321: goto GeneralCallWrite;
  1062  0099  0024               	movlb	4	; select bank4
  1063  009A  1615               	bsf	21,4	;volatile
  1064                           
  1065                           ;main.c: 325: }
  1066                           
  1067                           ;main.c: 324: return;
  1068  009B  0008               	return
  1069  009C                     i1l890:	
  1070                           
  1071                           ;main.c: 326: else
  1072                           ;main.c: 327: {
  1073                           ;main.c: 328: if (generalCall == 1)
  1074  009C  0020               	movlb	0	; select bank0
  1075  009D  0830               	movf	ISRI2C@generalCall,w
  1076  009E  3A01               	xorlw	1
  1077  009F  1903               	btfsc	3,2
  1078  00A0  283D               	goto	i1l830
  1079                           
  1080                           ;main.c: 332: CKP = 1;
  1081                           
  1082                           ;main.c: 329: goto GeneralCallWrite;
  1083  00A1  0024               	movlb	4	; select bank4
  1084  00A2  1615               	bsf	21,4	;volatile
  1085                           
  1086                           ;main.c: 333: return;
  1087  00A3  0008               	return
  1088  00A4                     __end_of_ISRI2C:	
  1089  007E                     btemp	set	126	;btemp
  1090  007E                     pic14e$flags	set	126
  1091  007E                     wtemp	set	126
  1092  007E                     wtemp0	set	126
  1093  0080                     wtemp1	set	128
  1094  0082                     wtemp2	set	130
  1095  0084                     wtemp3	set	132
  1096  0086                     wtemp4	set	134
  1097  0088                     wtemp5	set	136
  1098  007F                     wtemp6	set	127
  1099  007E                     ttemp	set	126
  1100  007E                     ttemp0	set	126
  1101  0081                     ttemp1	set	129
  1102  0084                     ttemp2	set	132
  1103  0087                     ttemp3	set	135
  1104  007F                     ttemp4	set	127
  1105  007E                     ltemp	set	126
  1106  007E                     ltemp0	set	126
  1107  0082                     ltemp1	set	130
  1108  0086                     ltemp2	set	134
  1109  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         22
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      11
    BANK0            80      3      22
    BANK1            32      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_I2CSlaveSetup

Critical Paths under _ISRDispatch in COMMON

    _ISRDispatch->_ISRI2C

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISRDispatch in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISRDispatch in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     8      0     371
                                              5 COMMON     3     3      0
                                              0 BANK0      3     3      0
                     _EEPROMReadByte
                      _I2CSlaveSetup
 ---------------------------------------------------------------------------------
 (1) _I2CSlaveSetup                                        3     3      0     229
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _EEPROMReadByte                                       2     2      0      31
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISRDispatch                                          1     1      0       0
                                              1 COMMON     1     1      0
                             _ISRI2C
 ---------------------------------------------------------------------------------
 (3) _ISRI2C                                               1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EEPROMReadByte
   _I2CSlaveSetup

 _ISRDispatch (ROOT)
   _ISRI2C

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              70      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      8       B       2       78.6%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      21       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      3      16       6       27.5%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            20      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               20      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
DATA                 0      0      21       9        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.32 build 58300 
Symbol Table                                                                                   Tue Apr 11 09:06:47 2017

                         l82 00E1                           l85 00EA                           l86 0101  
                         l87 0107      __size_of_EEPROMReadByte 0013                          l962 011A  
                        l980 0139                          l974 012C                          l968 0127  
                        _CKP 10AC                          _PR2 001B                          u567 00B7  
                        u577 00EF                 __CFG_IDLOC0$ 0000                 __CFG_IDLOC1$ 0000  
               __CFG_IDLOC2$ 0001                 __CFG_IDLOC3$ 0000                          wreg 0009  
               __CFG_LVP$OFF 0000                         l1004 00CB                         l1006 00CF  
                       _GCEN 10B7                         i1l94 000D                 __CFG_WRT$ALL 0000  
                       _Temp 0020                         _main 00A4                         fsr0h 0005  
                       fsr1h 0007                         fsr0l 0004                         indf0 0000  
                       indf1 0001                         fsr1l 0006                         btemp 007E  
                       ltemp 007E                         start 0012                         ttemp 007E  
                       wtemp 007E                __CFG_IESO$OFF 0000                        EEADRL 0191  
                      EEDATL 0193                _I2CInBufIndex 0078                        ?_main 0070  
                      _T2CON 001C                        _LATA5 0865                        i1l101 0035  
                      i1l830 003D                        i1l822 0034                        i1l840 0050  
                      i1l852 0064                        i1l828 0039                        i1l862 006F  
                      i1l880 008C                        i1l890 009C                        i1l858 006C  
                      i1l876 008A                        _SSPEN 10AD               __CFG_FCMEN$OFF 0000  
                      _Temp1 0031                        _Temp2 0032                        main@k 0035  
             __CFG_BOREN$OFF 0000                        ltemp0 007E                        ltemp1 0082  
                      ltemp2 0086                        ltemp3 0080                 _I2COutBuffer 002B  
                      ttemp0 007E                        ttemp1 0081                        ttemp2 0084  
                      ttemp3 0087                        ttemp4 007F                        wtemp0 007E  
                      wtemp1 0080                        wtemp2 0082                        wtemp3 0084  
                      wtemp4 0086                        wtemp5 0088                        wtemp6 007F  
     __size_of_I2CSlaveSetup 0039               __CFG_MCLRE$OFF 0000              __initialization 0013  
               __end_of_main 0111                 ?_ISRDispatch 0070                       ??_main 0075  
             __CFG_PLLEN$OFF 0000                       _CCPR1L 0291                       _EECON1 0195  
                     _EECON2 0196                       _ANSELA 018C                       _INTCON 000B  
                     _ISRI2C 001F                       _OSCCON 0099                       _SSP1IE 048B  
                     _SSP1IF 008B                       _WDTCON 0097                       _TRISA1 0461  
                     _TRISA2 0462                       _TRISA5 0465               _EEPROMReadByte 014A  
              _I2CSlaveSetup 0111      __end_of__initialization 001C            ISRI2C@generalCall 0030  
             __pcstackCOMMON 0070       __end_of_EEPROMReadByte 015D               ?_I2CSlaveSetup 0070  
                 __pbssBANK0 0020                      ?_ISRI2C 0070                   __pmaintext 00A4  
                 __pintentry 0004              ?_EEPROMReadByte 0070                      _CCP1CON 0293  
                    _CCP1SEL 08E8                      _ACKSTAT 10B6         __size_of_ISRDispatch 000E  
main@lockoutI2CAddressChange 0033                      _SSP1ADD 0212                      _SSP1BUF 0211  
            __size_of_ISRI2C 0085              ??_I2CSlaveSetup 0072                      __ptext0 0000  
                    __ptext1 0111                      __ptext2 014A                      __ptext4 001F  
                    clrloop0 015E         end_of_initialization 001C               I2CSlaveSetup@i 0074  
             _I2COutBufIndex 0079             __CFG_FOSC$INTOSC 0000               __end_of_ISRI2C 00A4  
                _I2CInBuffer 0026          start_initialization 0013                     ??_ISRI2C 0070  
           ??_EEPROMReadByte 0072            main@newI2CAddress 0034                  __pbssCOMMON 0078  
                  ___latbits 0000                __pcstackBANK0 0033           EEPROMReadByte@addr 0073  
              ??_ISRDispatch 0071                    clear_ram0 015D                     _PIR1bits 0011  
                   _SSP1CON1 0215                     _SSP1CON2 0216                     _SSP1CON3 0217  
                   _SSP1STAT 0214          __end_of_ISRDispatch 0012        __end_of_I2CSlaveSetup 014A  
              __size_of_main 006D                  _ISRDispatch 0004                 _SSP1STATSave 007A  
       I2CSlaveSetup@address 0073                  pic14e$flags 007E                     intlevel1 0000  
